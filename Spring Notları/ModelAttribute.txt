package com.example.springboot.SpringBootModel;

import java.util.Map;

import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

@org.springframework.stereotype.Controller
public class Controller {					/* Method modelattribute */
	//Her req'den önce calisirlar. Model sýnýfýna value isiminde, return degerinde bir attr eklerler
	@ModelAttribute(value = "msg1")
	public String ekle1() {
		//System.out.println("String ekle calisti");
		return "Deger1";
	}
	
	//Her req'den önce calisirlar. Model sýnýfýný parametre ile çekerek attr ekledik.
	@ModelAttribute
	public void ekle2(Model model){
		//System.out.println("String ekle2 calisti");
		model.addAttribute("msg2","Deger 2");
		model.addAttribute("msg3","Deger 3");
	}
	
	//Karisik. Hem parametre ile attr ekledik hem de value,return ile.
	@ModelAttribute(value = "msg6")
	public String ekle3(Model model){
		//System.out.println("String ekle3 calisti");
		model.addAttribute("msg4","Deger 4");
		model.addAttribute("msg5","deger5");
		return "Deger 6def";
	}
	
	//ModelAttr metodu reqparam da kullabilir. /test'e atilan requestte bulunan parametreler, bu methodlara da gçnderilir
	@ModelAttribute(value = "msg7")
	public String ekle4(@RequestParam(required = false) String msg7,Model model){
		//System.out.println("String ekle4 calisti");
		return msg7;
	}
	
	@GetMapping("/test")
	public String test(Model model){
		//Buraya istek geldginde ilk önce @modelattr'li methodlar calisir. Bu methodlar model sinifini doldurur
		//Bu model sinifi, result'a gönderilir
		model.addAttribute("msg8", "deger8");//Model'a burada da attr eklenebilir.
		System.out.println(model.toString());
		return "result";
	}
	
	
	
									/* Parametre Model attr */
	 /*Parametre olarak modelattr kullanilirsa, öncelikle modelda "msg1" adinda bir attr var mi diye bakilir.
	 * Varsa, st degiskenine direkt o attr atanýr.(Req ile msg1 parametresi yollansa da attr'e set edilmez ve st'ye atanmaz)
	 * Yoksa,boþ bir string oluþturulur, modelattr ve st'ye atanýr.(req ile msg1 paramý gönderildiyse modelattr'e set edilir ve st'ye atanir)*/	 
	@GetMapping("/testparam")
	public String testparam(@ModelAttribute("msg1") String st,Model model){
		System.out.println(model.toString());
		System.out.println("Message1: "+st);
		return "result";
	}
	
	
	/* Parametre olarak modelattr kullanilirsa (pojo class ile), model'da "user" adýnda bir attr var mý diye bakilir.
	 * Varsa, o kullanilir. (request ile user nesnesi alanlarý yollanýrsa attr'e set edilir, us'a atanýr)
	 * Yoksa, boþ bir user oluþturulup us ve modela atanýr.(Req paramlarý ile user alanlarý gönderilmiþ ise onlar da bu nesneye set edilir ve us'ye atanir)*/
	@GetMapping("/testparamuser")
	public String testparamuser(@ModelAttribute("user") User us,Model model){
		System.out.println(model.toString());
		System.out.println(us.getIsim()+" "+ us.getSoyisim());
		return "result";
	}

	
	/*	
	Þeklinde bir kullanýmda da default bir @ModelAttribute("user") varmýþ gibi davranýr("user" sabit deðiþtiremiyoruz.)
	model attrlerde "user" arar.
	Varsa, o kullanilir. (request ile user nesnesi alanlarý yollanýrsa attr'e set edilir, us'a atanýr)
	Yoksa, boþ bir user oluþturulup us ve modela atanýr.(Req paramlarý ile user alanlarý gönderilmiþ ise onlar da bu nesneye set edilir ve us'ye atanir)
	*/
	public String girisDene2(User us,Model model) {		
		System.out.println(model.toString());
		System.out.println(us.getIsim()+" "+ us.getSoyisim());
		return "result";
	}
	
	
	/*@ModelAttribute(value = "user")
	public User ekleuser() {
		//System.out.println("User ekle calisti");
		User user = new User();
		user.setIsim("HasanMethod");
		user.setSoyisim("CeritMethod");
		return user;
	}*/
	
	
													/*Örnek*/
	@GetMapping("/form")
	public String sendForm(Model model) {
		System.out.println(model.toString());
		return "form";
	}
	
	@PostMapping("/form")
	public String handleForm(@ModelAttribute("user") User us,Model model) {
		System.out.println(model.toString());
		System.out.println(us.getIsim()+" "+ us.getSoyisim());
		return "result";
	}
}